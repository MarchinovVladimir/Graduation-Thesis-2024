@model AllProductsQueryModel

@{
	ViewBag.Title = "All Products";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
	<div class="row">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="Category"></label>
				<select asp-for="Category" class="form-control">
					<option value="">All</option>
					@foreach (var category in Model.Categories)
					{
						<option value="@category">@category</option>
					}
				</select>
			</div>

			<div class="form-group">
				<label asp-for="ProductsPerPage"></label>
				<select asp-for="ProductsPerPage" class="form-control">
					<option value="3">3</option>
					<option value="6">6</option>
					<option value="9">9</option>
				</select>
			</div>

		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="...">
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="ProductSorting"></label>
				<select asp-for="ProductSorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
					<option value="2">Price Low To High</option>
					<option value="3">Price High To Low</option>
				</select>
			</div>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>

	</div>
</form>

@{
	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	int maxPage = (int)Math.Ceiling((double)Model.TotalProducts /
	Model.ProductsPerPage);
}

<div class="row mb-5">
	<div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :string.Empty)"
		   asp-controller="Product"
		   asp-action="All"
		   asp-route-CurrentPage="@previousPage"
		   asp-route-Category="@Model.Category"
		   asp-route-SearchString="@Model.SearchString"
		   asp-route-ProductSorting="@((int)Model.ProductSorting)">
			<<
		</a>
	</div>

	@{
		bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Products.Any();
	}

	<div class="col-md-4 text-center">
		Page number: <div>@Model.CurrentPage</div> 
	</div>

	<div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Product"
		   asp-action="All"
		   asp-route-CurrentPage="@(Model.CurrentPage + 1)"
		   asp-route-Category="@Model.Category"
		   asp-route-SearchString="@Model.SearchString"
		   asp-route-ProductSorting="@((int)Model.ProductSorting)">>></a>
	</div>
</div>

@if (!Model.Products.Any())
{
	<h2 class="text-center">No products found by the given criteria!</h2>
}
<div class="row">
	@foreach (var product in Model.Products)
	{
		<partial name="_ProductPartial" model="@product" />
	}
</div>
