@using AIO.Services.Data.Interfaces
@using AIO.Web.Infrastructure.Extentions
@inject ISellerService SellerService
@{
	bool isUserSeller = await SellerService.IsSellerExistByUserIdAsync(User.GetId());
	bool isSellerOwnerOfTheProduct = await SellerService.HasProductWithIdAsync(User.GetId(), Model.Id);
}

@model ProductDetailsViewModel
@{
	ViewBag.Title = "Product Details";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<div class="container" style="display:inline">
	<div class="row">
		<div class="col-4">
			<img class="card-img-top" style="width: 20rem;"
				 src="@Model.ImageUrl" alt="Product Image">
		</div>
		<div class="card col-8 border-0">
			<p style="font-size:25px;"><u>@Model.Title</u></p>
			<p>
				Price:
				<b>@($"{Model.Price:f2}") BGN</b>
			</p>
			<p>Description: <b>@Model.Description</b></p>
			<p>Category: <b>@Model.Category</b></p>
			<p>Created on: <b>@Model.CreatedOn</b></p>
			<p>Expires on: <b>@Model.ExpirationDate</b></p> 
			<p>Location: <b>@Model.Location</b></p> 
			<p>Post code: <b>@Model.PostCode</b></p> 
			
			<p></p>
			<div class="card" style="width: 18rem;">
				<div class="card-body">
					<h5 class="card-title">Seller Info</h5>
					<p class="card-text">Full Name: @Model.Seller.FullName</p>
					<p class="card-text">Email: @Model.Seller.Email</p>
					<p class="card-text">Phone Number: @Model.Seller.PhoneNumber</p>
				</div>
			</div>
		</div>
	</div>
</div>
