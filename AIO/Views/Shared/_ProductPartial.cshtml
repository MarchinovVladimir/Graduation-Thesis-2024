@using AIO.Services.Data.Interfaces
@using AIO.Web.Infrastructure.Extentions
@inject ISellerService SellerService
@{
	bool isUserSeller = await SellerService.IsSellerExistByUserIdAsync(User.GetId());
	bool isSellerOwnerOfTheProduct = await SellerService.HasProductWithIdAsync(User.GetId(), Model.Id);
}

@model ProductAllViewModel

<div class="col-md-4">
	<div class="card mb-3">
		<img class="card-img-top" src="@Model.ImageUrl" alt="House Image">
		<div class="card-body text-center">
			<h4>@Model.Title</h4>
			<h6>
				Price :<b>@($"{Model.Price:F2}") BGN</b>
			</h6>
			<br />
			<a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="@Model.Id"
			   class="btn btn-success">Details</a>
			@if (this.User?.Identity?.IsAuthenticated ?? false)
			{
				@if ((isUserSeller && isSellerOwnerOfTheProduct) || User.IsAdmin())
				{
					<a asp-area="" asp-controller="Product" asp-action="Edit" asp-route-id="@Model.Id"
					   class="btn btn-warning">Edit</a>

					@if (!Model.IsActive)
					{
						<a asp-area="" asp-controller="Product" asp-action="Reactivate" asp-route-id="@Model.Id"
						   class="btn btn-primary">Reactivate</a>
					}

					<a asp-area="" asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Id"
					   class="btn btn-danger">Delete</a>
				}
			}
			<p></p>
		</div>
	</div>
</div>
