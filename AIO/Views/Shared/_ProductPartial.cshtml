@using AIO.Services.Data.Interfaces
@using AIO.Web.Infrastructure.Extentions
@inject IAgentService AgentService
@{
	bool isUserAgent = await AgentService.IsAgentExistByUserIdAsync(User.GetId());
	bool isAgentOwnerOfTheProduct = await AgentService.HasProductWithIdAsync(User.GetId(), Model.Id);
}

@model ProductAllViewModel

<div class="col-md-4">
	<div class="card mb-3">
		<img class="card-img-top" src="@Model.ImageUrl" alt="House Image">
		<div class="card-body text-center">
			<h4>@Model.Title</h4>
			@* <h6>Address: <b>@Model.Address</b></h6> *@
			<h6>
				Price :
				<b>@($"{Model.Price:F2}") BGN</b>
			</h6>
			@* <h6>(@(Model.IsRented ? "Rented" : "Not Rented"))</h6> *@
			<br />
			<a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="@Model.Id"
			   class="btn btn-success">Details</a>
			@if (this.User?.Identity?.IsAuthenticated ?? false)
			{
				@if((isUserAgent && isAgentOwnerOfTheProduct) ||User.IsAdmin())
				{
					<a asp-area="" asp-controller="Product" asp-action="Edit" asp-route-id="@Model.Id"
					   class="btn btn-warning">Edit</a>
					<a asp-area=""  asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Id"
					   class="btn btn-danger">Delete</a>
				}				
				<p></p>
				@* @if (!Model.IsRented)
				{
					<form class="input-group-sm" asp-controller="House"
						  asp-action="Rent" asp-route-id="@Model.Id" method="post">
						<input class="btn btn-primary" type="submit" value="Rent" />
					</form>
				}
				else
				{
					<form asp-controller="House" asp-action="Leave"
						  asp-route-id="@Model.Id" method="post">
						<input class="btn btn-primary" type="submit" value="Leave" />
					</form>
				} *@
			}
		</div>
	</div>
</div>
